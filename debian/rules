#!/usr/bin/make -f
export LD_LIBRARY_PATH=/usr/lib/i386-linux-gnu/libfakeroot
# See debhelper(7) (uncomment to enable)
# output every command that modifies files on the build system.
LD_PRELOAD=libfakeroot-sysv.so
DEB_HOST_GNU_TYPE   ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DH_VERBOSE = 1

# see EXAMPLES in dpkg-buildflags(1) and read /usr/share/dpkg/*
DPKG_EXPORT_BUILDFLAGS = 1
include /usr/share/dpkg/default.mk
include /usr/share/cdbs/1/rules/debhelper.mk


sheldon = ./
name_var = $(shell echo $1 | sed 's/-dev$$//g;  s/-/_/g; s/\(^lib.*\)[0-9]$$/\1/g; '  )
DEB_BUILD_OPTIONS=nostrip parallel=2
DIRECTORY=$(CURDIR)/$($(call name_var,$(cdbs_curpkg)))

DEB_MAKE_INSTALL_TARGET = install INSTALL_ROOT=$(CURDIR)/debian/$($(call name_var,$(cdbs_curpkg)))
DEB_BUILD_GNU_TYPE ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)
DEB_BUILDDIR = ./
DEB_INSTALL_DOCS_ALL =$(shell for i in README NEWS TODO BUGS AUTHORS THANKS;do if test -s $(DIRECTORY)/$$i; then echo $(DIRECTORY)/$$i; fi; done)

DEB_MAKE_INVOKE = $(DEB_MAKE_ENVVARS) $(MAKE) -j2

DEB_MAKE_ENVVARS := INSTALLROOT=debian/tmp $(DEB_MAKE_ENVVARS)

QT_BIN_ALL_PACKAGES=sheldon

$(patsubst %,binary-install/%, $(QT_BIN_ALL_PACKAGES)) ::
	$(DEB_MAKE_ENVVARS) $(MAKE) -C $(DIRECTORY) INSTALL_ROOT=$(CURDIR)/debian/$(cdbs_curpkg) install

clean::
	$(MAKE) clean
	rm -f bin/sheldon
	qmake
# see FEATURE AREAS in dpkg-buildflags(1)
#export DEB_BUILD_MAINT_OPTIONS = hardening=+all

# see ENVIRONMENT in dpkg-buildflags(1)
# package maintainers to append CFLAGS
#export DEB_CFLAGS_MAINT_APPEND  = -Wall -pedantic
# package maintainers to append LDFLAGS
#export DEB_LDFLAGS_MAINT_APPEND = -Wl,--as-needed


# main packaging script based on dh7 syntax
# %:
# 	dh $@ 

# debmake generated override targets
# This is example for Cmake (See http://bugs.debian.org/641051 )
#override_dh_auto_configure:
#	dh_auto_configure -- \
#	-DCMAKE_LIBRARY_PATH=$(DEB_HOST_MULTIARCH)




